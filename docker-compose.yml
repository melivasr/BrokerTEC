services:
    db:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: mssql
        environment:
            SA_PASSWORD: "${DB_PASS}"
            ACCEPT_EULA: "Y"
        ports:
            - "1433:1433"

    db-init1:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: db-init1
        depends_on:
            - db
        entrypoint: >
            sh -c "until /opt/mssql-tools18/bin/sqlcmd -S mssql,1433 -U SA -P 'Str0ng!Passw0rd' -C -Q 'SELECT 1;'; do sleep 1; done &&
            /opt/mssql-tools18/bin/sqlcmd -S mssql,1433 -U SA -P 'Str0ng!Passw0rd' -C -Q 'DROP DATABASE IF EXISTS BrokerTEC; CREATE DATABASE BrokerTEC;'"

    db-init2:
        build:
            context: ./backend
        container_name: db-init2
        depends_on:
            - db-init1
        environment:
            DB_HOST: db
            DB_PORT: 1433
            DB_USER: sa
            DB_PASS: "${DB_PASS}"
            DB_NAME: BrokerTEC
        entrypoint: >
            sh -c "sleep 5 && node runTablesCreation.js && node runSeed.js"

    backend:
        build:
            context: ./backend
        container_name: backend
        depends_on:
            - db-init2
        environment:
            DB_HOST: db
            DB_PORT: 1433
            DB_USER: sa
            DB_PASS: "${DB_PASS}"
            DB_NAME: BrokerTEC
            PORT: 3001
        ports:
            - "3001:3001"

    frontend:
        build:
            context: .
            dockerfile: src/Dockerfile
        container_name: frontend
        depends_on:
            - backend
        environment:
            REACT_APP_API_URL: http://localhost:3001
        ports:
            - "3000:80"
